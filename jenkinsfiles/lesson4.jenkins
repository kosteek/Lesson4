#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
    }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    environment {
        IMAGE_VER = '0.0.1'
    }
    stages {
        stage("Compile") {
            steps {
                sh 'docker run --rm -i -v ${env.WORKSPACE} -w /app golang:1.16 bash -c "cd /app && go mod init go.mod &&  go mod tidy && go get -u github.com/go-sql-driver/mysql && CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app ."'
            }
        }
        stage("Build") {
            steps {
                sh "ls -a ./ && docker build -f Dockerfile.build -t myapp:${IMAGE_VER} . && rmdir ./bin"
            }
        }
        stage("Deploy to k8s") {
            steps {
                sh 'docker image save --output=myapp.tar myapp:'+${IMAGE_VER}
                sh 'scp -P2222 myapp.tar vagrant@10.0.2.2:/home/vagrant'
                sh 'ssh -p2222 vagrant@10.0.2.2 \'docker image import /home/vagrant/myapp.tar myapp:'+${IMAGE_VER}+' && rm /home/vagrant/myapp.tar\''
                sh 'rm myapp.tar'
                sh 'sed -i \'s|{{VER}}|'+${IMAGE_VER}+'|g\' deployment_myapp.yml'
                sh 'scp -P2222 deployment_myapp.yml vagrant@10.0.2.2:/home/vagrant'
                sh 'ssh -p2222 vagrant@10.0.2.2 \'k apply -f /home/vagrant/deployment_myapp.yml\''
            }
        }
    }
}
